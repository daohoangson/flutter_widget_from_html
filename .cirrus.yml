env:
  CODECOV_TOKEN: ENCRYPTED[0bad38cf59a2fda73e72491e18a564995cf3a5c862b5400834bfa9873713e780a2deed3e57b265279bd1e91168ee492a]
  ZEIT_EMAIL: flutter_widget_from_html@daohoangson.com
  ZEIT_TOKEN: ENCRYPTED[4aaf3c4bb0aedad605db9ac986f9a54a7843cede69c435a94dbacdddc9551616263fc70180e01d3b73ef5c3d72c8d2e0]

analyze_task:
  container:
    image: cirrusci/flutter:stable
  pub_get_script:
    - flutter pub get
    - ( cd packages/core && flutter pub get )
    - ( cd packages/example && flutter pub get )
  format_script:
    - flutter format --dry-run --set-exit-if-changed .
  analyze_script:
    - flutter analyze --no-pub

pipe:
  name: dartdoc
  only_if: $CIRRUS_BRANCH =~ 'document/.*'
  env:
    FLUTTER_ROOT: /home/cirrus/sdks/flutter
    NOW_PROJECT_JSON: ENCRYPTED[e39b933950795b26ccc4f51665601710bdd72da2dd6066d23fd4392e7d9e303153a230c90335ed49743c79f58aedbcbb]
  steps:
    - image: cirrusci/flutter:stable
      generate_document_script:
        - ( cd packages/core && ../../tool/dartdoc.sh )
        - ( cd packages/example && flutter pub get )
        - ./tool/dartdoc.sh
    - image: node:lts
      install_now_cli_script: npm install -g now
      deploy_to_now_script:
        - echo $NOW_PROJECT_JSON > .now/project.json
        - now --token $ZEIT_TOKEN

unit_test_task:
  env:
    matrix:
      - FLUTTER_VERSION: dev
      - FLUTTER_VERSION: beta
      - FLUTTER_VERSION: stable
  name: unit_test@$FLUTTER_VERSION
  container:
    image: cirrusci/flutter:$FLUTTER_VERSION

  test_script: |
    set -e
    
    if [ "$FLUTTER_VERSION" == "stable" ]; then
      COVERAGE=1 ./tool/test.sh
      bash <(curl -s https://codecov.io/bash)
    else
      ./tool/test.sh
    fi
  always:
    golden_failures_artifacts:
      path: packages/example/test/golden/failures/*
  allow_failures: $FLUTTER_VERSION != 'stable'

ios_test_task:
  skip: "!changesInclude('lib/src/widget/web_view.dart')"
  depends_on:
    - analyze
    - unit_test@stable
  osx_instance:
    image: catalina-xcode
  install_flutter_script:
    - curl https://storage.googleapis.com/flutter_infra/releases/stable/macos/flutter_macos_$FLUTTER_VERSION-stable.zip -o flutter.zip
    - unzip -qq flutter.zip
    - mv flutter $HOME/flutter
  create_simulator_script:
    - brew install jq
    - _deviceType=$( xcrun simctl list devicetypes iphone -j | jq '.devicetypes[-1]' )
    - _deviceTypeName=$( echo $_deviceType | jq .name -r )
    - _deviceTypeId=$( echo $_deviceType | jq .identifier -r )
    - _runTime=$( xcrun simctl list runtimes ios -j | jq '.runtimes[].identifier' -r | tail -n 1 )
    - xcrun simctl create "$_deviceTypeName" "$_deviceTypeId" "$_runTime" | xargs xcrun simctl boot
  test_script:
    - export PATH=$PATH:$HOME/flutter/bin
    - ./tool/integration.sh

android_test_task:
  skip: "!changesInclude('lib/src/widget/video_player.dart', 'lib/src/widget/web_view.dart')"
  trigger_type: manual
  container:
    image: cirrusci/flutter:stable
  depends_on:
    - analyze
    - unit_test@stable
  env:
    AWS_ACCESS_KEY_ID: AKIAY43IFJQXIX5OS5OM
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY: ENCRYPTED[fe3999edbfb5c2b0033566f579bb4b51189a925d7d7e507bc6952bb3c6320163e611b391c49425b51e7078900b2a5a74]
  test_script: ./tool/sylph/cmd.sh

api_task:
  only_if: $CIRRUS_BRANCH =~ 'api/.*'
  container:
    image: node:lts
  env:
    NOW_PROJECT_JSON: ENCRYPTED[afd6026f9d92bab5e6e3fefd1aaf7e0150d9accfc89cd3c452562a8962c802a2b9b0596a3ad550e1e59d6dbeadb0d78d]
  node_modules_cache:
    folder: api/node_modules
    reupload_on_changes: false
    fingerprint_script:
      - echo $CIRRUS_OS
      - node --version
      - cat api/package-lock.json
    populate_script:
      - cd api && npm ci
  deploy_script:
    - cd api
    - echo $NOW_PROJECT_JSON > .now/project.json
    - npm run deploy
