name: Flutter
on:
  push:
    paths: 
      - .github/workflows/flutter.yml
      - 'demo_app/test/**'
      - 'demo_app/test_driver/**'
      - 'packages/**'
      - 'tool/dartdoc/**'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
      - name: Run flutter format
        run: flutter format --dry-run --set-exit-if-changed .
      - name: Analyze core
        run: cd packages/core && flutter analyze
      - name: Analyze enhanced
        run: cd packages/enhanced && flutter analyze
      - name: Analyze demo_app
        run: cd demo_app && flutter analyze

  unit_test:
    name: Unit test
    strategy:
      matrix:
        channel: [dev, beta, stable]
    continue-on-error: ${{ matrix.channel != 'stable' }}
    runs-on: ubuntu-latest
        
    steps:
      - uses: actions/checkout@v2
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: ${{ matrix.channel }}
      - name: Run ./tool/test.sh
        run: |
          if [ "${{ matrix.channel }}" == "stable" ]; then
            ./tool/test.sh --coverage
            bash <(curl -s https://codecov.io/bash)
          else
            ./tool/test.sh
          fi

  dartdoc:
    name: Document
    needs:
      - analyze
      - unit_test
    runs-on: ubuntu-latest
        
    steps:
      - uses: actions/checkout@v2
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
      - name: Generate document
        run: |
          set -e

          ( cd packages/core && ../../tool/dartdoc/dartdoc.sh )
          ( cd packages/enhanced && ../../tool/dartdoc/dartdoc.sh )
      - name: Deploy via now.sh
        id: now
        run: |
          set -e

          mkdir -p ./.now && echo '${{ secrets.DOCUMENT_PROJECT_JSON }}' > ./.now/project.json
          cp ./tool/dartdoc/now.json ./now.json
          _url=$( now --token ${{ secrets.ZEIT_TOKEN }} )

          _url="${_url//'%'/'%25'}"
          _url="${_url//$'\n'/'%0A'}"
          _url="${_url//$'\r'/'%0D'}"
          echo "::set-output name=url::${_url}"
      - name: Create commit comment
        uses: daohoangson/comment-on-github@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: "Deployed ${{ github.sha }} to ${{ steps.now.outputs.url }}.\n\nQuick links:\n- [core README](${{ steps.now.outputs.url }}/packages/core/doc/api/)\n- [flutter_widget_from_html_core library](${{ steps.now.outputs.url }}/packages/core/doc/api/flutter_widget_from_html_core/flutter_widget_from_html_core-library.html)\n- [enhanced README](${{ steps.now.outputs.url }}/packages/enhanced/doc/api/)\n- [flutter_widget_from_html library](${{ steps.now.outputs.url }}/packages/enhanced/doc/api/flutter_widget_from_html/flutter_widget_from_html-library.html)\n" 
          fingerprint: "## Dartdoc"
          replace: please

  ios:
    name: iOS Test
    needs:
      - analyze
      - unit_test
    runs-on: macos-latest
        
    steps:
      - uses: actions/checkout@v2
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
      - name: Create simulator
        run: |
          set -e

          _deviceType=$( xcrun simctl list devicetypes iphone -j | jq '.devicetypes[-1]' )
          _deviceTypeName=$( echo $_deviceType | jq .name -r )
          _deviceTypeId=$( echo $_deviceType | jq .identifier -r )
          _runTime=$( xcrun simctl list runtimes ios -j | jq '.runtimes[].identifier' -r | tail -n 1 )
          xcrun simctl create "$_deviceTypeName" "$_deviceTypeId" "$_runTime" | xargs xcrun simctl boot
      - run: ./tool/integration.sh
