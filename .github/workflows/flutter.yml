name: Flutter
on:
  push:
    branches:
      - master
  pull_request:
    branches-ignore:
      - release/beta
      - release/master

jobs:
  unit_test:
    name: Unit test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
      - name: Run flutter format
        run: flutter format --dry-run --set-exit-if-changed .
      - run: ./tool/test.sh --coverage
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: failures
          path: demo_app/test/failures/
      - uses: codecov/codecov-action@v3

  integration_test:
    name: Integration test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Flutter
        uses: subosito/flutter-action@v2

      - name: Create iOS simulator
        run: |
          set -e

          _runtime=$(xcrun simctl list runtimes ios -j | jq -r '.runtimes[-1]')
          _runtimeId=$(echo $_runtime | jq -r .identifier)
          echo "_runtimeId=$_runtimeId"

          _deviceType=$(echo $_runtime | jq -r '.supportedDeviceTypes[-1]')
          _deviceTypeName=$(echo $_deviceType | jq -r .name)
          echo "_deviceTypeName=$_deviceTypeName"
          _deviceTypeId=$(echo $_deviceType | jq -r .identifier)
          echo "_deviceTypeId=$_deviceTypeId"

          xcrun simctl create "$_deviceTypeName" "$_deviceTypeId" "$_runtimeId" | xargs xcrun simctl boot
      - name: Run tests on iOS
        run: ./tool/integration.sh
