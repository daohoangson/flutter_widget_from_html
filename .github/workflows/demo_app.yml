name: Demo
on:
  push:

jobs:
  build:
    defaults:
      run:
        working-directory: demo_app
    environment:
      name: vercel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Flutter
        uses: subosito/flutter-action@v2

      - run: flutter build apk --debug
      - name: Upload debug APK
        id: appetize
        run: |
          set -e

          curl --http1.1 -v https://${{ secrets.APPETIZE_API_TOKEN }}@api.appetize.io/v1/apps \
            -F file=@build/app/outputs/apk/debug/app-debug.apk \
            -F platform=android \
            -F note=${{ github.sha }} \
            | tee build/appetize.json

          # An extra `echo` to force new line
          # otherwise GitHub won't be able to pick up the `set-output` command
          echo

          _url=$( cat build/appetize.json | jq -r .publicURL )

          _url="${_url//'%'/'%25'}"
          _url="${_url//$'\n'/'%0A'}"
          _url="${_url//$'\r'/'%0D'}"
          echo "::set-output name=url::${_url}"
      - run: flutter build web
      - name: Generate supported/tags.html
        run: |
          set -e

          ( cd ./test/goldens && php tags.php >tags.html )
          cp -R ./test/goldens build/web/supported

      - run: flutter build apk --release --split-per-abi
      - name: Copy APKs
        run: cp -R build/app/outputs/apk/release build/web/apks

      - name: Deploy via Vercel
        id: now
        env:
          PROJECT_JSON: ${{ secrets.EXAMPLE_PROJECT_JSON }}
          TOKEN: ${{ secrets.ZEIT_TOKEN }}
        if: env.PROJECT_JSON != null && env.TOKEN != null
        run: |
          set -e

          cd ./build/web
          { \
            echo '{'; \
            echo '  "version": 2,'; \
            echo '  "builds": ['; \
            echo '  	{ "src": "./**/*", "use": "@now/static" }'; \
            echo '  ]'; \
            echo '}'; \
          } > ./now.json

          mkdir -p ./.now && echo "$PROJECT_JSON" > ./.now/project.json

          if [ $GITHUB_REF == 'refs/heads/master' ]; then
            _url=$( now  --prod --token "$TOKEN" )
          else
            _url=$( now --token "$TOKEN" )
          fi

          _url="${_url//'%'/'%25'}"
          _url="${_url//$'\n'/'%0A'}"
          _url="${_url//$'\r'/'%0D'}"
          echo "::set-output name=url::${_url}"
      - name: Create commit comment
        if: steps.now.conclusion == 'success'
        uses: daohoangson/comment-on-github@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: |
            ${{ github.sha }} APKs:

            - [app-armeabi-v7a-release.apk](${{ steps.now.outputs.url }}/apks/app-armeabi-v7a-release.apk)
            - [app-arm64-v8a-release.apk](${{ steps.now.outputs.url }}/apks/app-arm64-v8a-release.apk)
            - [app-x86_64-release.apk](${{ steps.now.outputs.url }}/apks/app-x86_64-release.apk)
            - [Debug APK](${{ steps.appetize.outputs.url }}) via https://appetize.io

            Web build has been deployed to ${{ steps.now.outputs.url }}. Quick links:

            - [supported/tags.html](${{ steps.now.outputs.url }}/supported/tags.html)
            - [Hello World](${{ steps.now.outputs.url }}/#/helloworld)
            - [Hello World (core)](${{ steps.now.outputs.url }}/#/helloworldcore)
            - [Wordpress](${{ steps.now.outputs.url }}/#/wordpress)
          fingerprint: "## Demo app"
          replace: please
